# Essential Requirements for Enhanced Hybrid LSTM + XGBoost Training
# =================================================================
# Compatible with Jupyter and existing packages

# ===== CORE DATA SCIENCE =====
numpy>=1.22.4,<2.0
pandas>=2.0.0
scipy>=1.11.0
scikit-learn>=1.3.0

# ===== MACHINE LEARNING =====
tensorflow>=2.15.0
# GPU support for TensorFlow (optional, for CUDA-enabled systems)
tensorflow[and-cuda]>=2.15.0  # Alternative: use this for automatic CUDA setup
# OR manually install CUDA packages:
# nvidia-cudnn-cu12>=8.9.0
# nvidia-cuda-runtime-cu12>=12.0
xgboost>=2.0.0
catboost>=1.2.0

# ===== VISUALIZATION =====
matplotlib>=3.7.0
seaborn>=0.12.0

# ===== TECHNICAL ANALYSIS =====
pandas-ta>=0.3.14b
Boruta>=0.4.3

# ===== UTILITIES =====
attrs>=17.3.0
wheel>=0.35.1,<0.36.0
protobuf>=3.19.0,<5
python-dateutil>=2.8.2
pytz>=2023.3
tqdm>=4.62.0

# ===== CONFIGURATION =====
# Use pre-built wheel to avoid build issues
pyyaml==6.0.2
jinja2>=3.0.3

# ===== COMPATIBILITY =====
# No specific constraints needed with PyYAML 6.0.2

# ===== SYSTEM =====
psutil>=5.8.0
joblib>=1.1.0
requests>=2.25.0
urllib3>=1.25.4,<2.1

# ===== TRADING BOT DEPENDENCIES =====
python-dotenv>=1.0.0
httpx>=0.27.0
websockets>=12.0
python-telegram-bot>=22.0

# ===== TESTING =====
pytest>=8.0.0
pytest-cov>=4.0.0

# =============================================================================
# INSTALLATION:
# 
# RECOMMENDED: Use a virtual environment to avoid conflicts
# python -m venv venv
# venv\Scripts\activate  # On Windows
# source venv/bin/activate  # On Linux/Mac
#
# Install main requirements (use --force-reinstall to resolve conflicts):
# pip install -r requirements.txt --force-reinstall
#
# FOR GPU SUPPORT (NVIDIA CUDA):
# 1. Ensure you have NVIDIA GPU with CUDA Compute Capability 3.5+
# 2. Install NVIDIA GPU drivers
# 3. The tensorflow[and-cuda] package will automatically install CUDA libraries
# 4. Verify GPU detection: python -c "import tensorflow as tf; print(tf.config.list_physical_devices('GPU'))"
#
# ALTERNATIVE GPU SETUP (manual CUDA installation):
# 1. Install CUDA Toolkit 12.x from NVIDIA
# 2. Uncomment the nvidia-cudnn-cu12 and nvidia-cuda-runtime-cu12 lines above
# 3. Comment out the tensorflow[and-cuda] line
#
# NOTE: This version resolves common dependency conflicts by:
# - Constraining numpy to <2.0 for compatibility with cupy, pyarrow, pywavelets
# - Setting urllib3 <2.1 for botocore compatibility
# - Adding attrs, wheel, protobuf constraints for various packages
#
# If gradient package conflicts with PyYAML 6.0.2, uninstall it:
# pip uninstall gradient
# 
# The gradient package is only needed for Paperspace Gradient platform.
# For local training, it's not required.
# =============================================================================